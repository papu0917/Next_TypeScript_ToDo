import { useState } from 'react'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

type Todo = {
    value: string;
    readonly id: number;
    checked: boolean;
    removed: boolean;
};

export default function Home() {
    const [text, setText] = useState('');
    const [todos, setTodos] = useState<Todo[]>([]);

    const handleOnSubmit = () => {
        if (!text) return

        const newTodo: Todo = {
            value: text,
            id: new Date().getTime(),
            checked: false,
            removed: false,
        };

        setTodos([newTodo, ...todos]);
        setText('');
    };

    const handleOnChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        setText(e.target.value);
    };

    const handleOnEdit = (id: number, value: string) => {
        const newTodos = todos.map((todo) => {
            if (todo.id === id) {
                todo.value = value;
            }
            return todo;
        });

        setTodos(newTodos);
    };

    const handleOnChecked = (id: number, checked: boolean) => {
        const newTodos = todos.map((todo) => {
            if (todo.id === id) {
                todo.checked = !checked;
            }
            return todo;
        });

        setTodos(newTodos);
    };

    const handleOnRemove = (id: number, removed: boolean) => {
        const newTodos = todos.map((todo) => {
            if (todo.id === id) {
                todo.removed = !removed;
            }
            return todo;
        });

        setTodos(newTodos);
    };


    return (
        <div className={styles.container}>
            <Head>
                <title>Create Next App</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <h1 className={styles.title}>ToDo App</h1>
                <div>
                    <form
                        onSubmit={(e) => {
                            e.preventDefault();
                            handleOnSubmit();
                        }}
                    >
                        <input
                            type="text"
                            value={text}
                            onChange={(e) => handleOnChange(e)}
                        />
                        <input
                            type="submit"
                            value="追加"
                            onSubmit={handleOnSubmit}
                        />
                    </form>
                    <ul>
                        {todos.map((todo) => {
                            return (
                                <li key={todo.id}>
                                    <input
                                        type="checkbox"
                                        disabled={todo.removed}
                                        checked={todo.checked}
                                        onChange={() => handleOnChecked(todo.id, todo.checked)}
                                    />
                                    <input
                                        type="text"
                                        disabled={todo.checked || todo.removed}
                                        value={todo.value}
                                        onChange={(e) => handleOnEdit(todo.id, e.target.value)}
                                    />
                                    <button onClick={() => handleOnRemove(todo.id, todo.removed)}>{todo.removed ? '復元' : '削除'}
                                    </button>
                                </li>
                            );
                        })}
                    </ul>
                </div>
            </main>

            <footer className={styles.footer}>
                <a
                    href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
                    target="_blank"
                    rel="noopener noreferrer"
                >
                    Powered by{' '}
                    <span className={styles.logo}>
                        <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
                    </span>
                </a>
            </footer>
        </div>
    )
}
